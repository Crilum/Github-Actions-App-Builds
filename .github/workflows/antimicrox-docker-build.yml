name: Build AntiMicroX
on:
  push:
    branches: 
      - 'main'
    paths: 
      - '.github/workflows/antimicrox-docker-build.yml'
  workflow_dispatch:
jobs:
  Build-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env
        run: |
          echo "webVer=$(curl -s https://api.github.com/repos/AntiMicroX/antimicrox/releases/latest | jq .tag_name | sed -e 's/.*tag_name//g' -e 's/"//g' -e 's/://g')" >> $GITHUB_ENV
      - name: Set up multiarch/qemu-user-static
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - uses: docker://multiarch/ubuntu-core:arm64-focal
        with:
          args: >
            bash -c
            "apt update && DEBIAN_FRONTEND=noninteractive apt install -y libqt5widgets5 git doxygen g++ cmake extra-cmake-modules qt5-default qttools5-dev qttools5-dev-tools libsdl2-dev libxi-dev libxtst-dev libx11-dev itstool gettext &&
            git clone https://github.com/AntiMicroX/antimicrox -b $webVer &&
            cd antimicrox &&
            mkdir build && cd build &&
            cmake .. -DCPACK_GENERATOR="DEB" &&
            cmake --build . --target package &&
            mkdir -p ../../pkgs &&
            mv *.deb ../../pkgs &&
            ls"
            
      - name: Release & Assets
      # You may pin to the exact commit or the version.
      # uses: Hs1r1us/Release-AIO@354b8db50d5b6310b621cb6c5e29d1f8e611aff7
        uses: Hs1r1us/Release-AIO@v1.0
        with: 
          # The name of the tag
          tag_name: AntiMicroX-${{ github.webVer }}
        # The name of the release
          release_name: AntiMicroX
        # Text describing the contents of the tag
          body: AntiMicroX arm builds - version ${{ github.webVer }}
        # The path to the asset you want to upload
          asset_files: pkgs/AntiMicroX-${{ github.webVer }}-aarch64.deb
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          # Artifact name
          name: arm64 build
          # A file, directory or wildcard pattern that describes what to upload
          path: "pkgs/*"
  Build-armhf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env
        run: |
          echo "webVer=$(curl -s https://api.github.com/repos/AntiMicroX/antimicrox/releases/latest | jq .tag_name | sed -e 's/.*tag_name//g' -e 's/"//g' -e 's/://g')" >> $GITHUB_ENV
      - name: Set up multiarch/qemu-user-static
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - uses: docker://multiarch/ubuntu-core:armhf-focal
        with:
          args: >
            bash -c
            "apt update && DEBIAN_FRONTEND=noninteractive apt install -y libqt5widgets5 git doxygen g++ cmake extra-cmake-modules qt5-default qttools5-dev qttools5-dev-tools libsdl2-dev libxi-dev libxtst-dev libx11-dev itstool gettext &&
            git clone https://github.com/AntiMicroX/antimicrox -b $webVer &&
            cd antimicrox &&
            mkdir build && cd build &&
            cmake .. -DCPACK_GENERATOR="DEB" && 
            export CMAKE_PREFIX_PATH=/lib/arm-linux-gnueabihf/cmake/ &&
            cmake .. -DCPACK_GENERATOR="DEB" && 
            cmake --build . --target package &&
            mkdir -p ../pkgs &&
            mv *.deb ../../pkgs &&
            ls"
            
      #- name: Upload
       # uses: ncipollo/release-action@v1
        #with:
         # allowUpdates: true
          #artifacts: "pkgs/*"
          #body: "test-antimicrox"
          #name: test-antimicrox
          #tag: vtest-antimicrox
      - name: Release & Assets
      # You may pin to the exact commit or the version.
      # uses: Hs1r1us/Release-AIO@354b8db50d5b6310b621cb6c5e29d1f8e611aff7
        uses: Hs1r1us/Release-AIO@v1.0
        with: 
          # The name of the tag
          tag_name: AntiMicroX-${{ github.webVer }}
        # The name of the release
          release_name: AntiMicroX
        # Text describing the contents of the tag
          body: AntiMicroX arm builds - version ${{ github.webVer }}
        # The path to the asset you want to upload
          asset_files: pkgs/AntiMicroX-${{ github.webVer }}-armv7l.deb
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          # Artifact name
          name: armhf build
          # A file, directory or wildcard pattern that describes what to upload
          path: pkgs/*
